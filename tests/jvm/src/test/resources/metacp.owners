_empty_.Empty# => _empty_.
_empty_.Empty#`<init>`(0). => _empty_.Empty#
_root_.example.A# => _root_.example.
_root_.example.A#foo(0). => _root_.example.A#
_root_.example.B# => _root_.example.
_root_.example.B#`<init>`(0). => _root_.example.B#
_root_.example.B#foo(0). => _root_.example.B#
_root_.example.Example. => _root_.example.
_root_.example.Example.main(1). => _root_.example.Example.
_root_.example.Example.main(1).(args) => _root_.example.Example.main(1).
_root_.example.Example.x. => _root_.example.Example.
_root_.example.Synthetic# => _root_.example.
_root_.example.Synthetic#`<init>`(0). => _root_.example.Synthetic#
_root_.example.`local-file`# => _root_.example.
_root_.example.`local-file`#`<init>`(0). => _root_.example.`local-file`#
_root_.exclude.Exclude# => _root_.exclude.
_root_.exclude.Exclude#`<init>`(0). => _root_.exclude.Exclude#
_root_.flags.p.package. => _root_.flags.p.
_root_.flags.p.package.AA# => _root_.flags.p.package.
_root_.flags.p.package.AA#(x) => _root_.flags.p.package.AA#
_root_.flags.p.package.AA#(y) => _root_.flags.p.package.AA#
_root_.flags.p.package.AA#(z) => _root_.flags.p.package.AA#
_root_.flags.p.package.AA#`<init>`(3). => _root_.flags.p.package.AA#
_root_.flags.p.package.AA#`<init>`(3).(x) => _root_.flags.p.package.AA#`<init>`(3).
_root_.flags.p.package.AA#`<init>`(3).(y) => _root_.flags.p.package.AA#`<init>`(3).
_root_.flags.p.package.AA#`<init>`(3).(z) => _root_.flags.p.package.AA#`<init>`(3).
_root_.flags.p.package.C# => _root_.flags.p.package.
_root_.flags.p.package.C#(x) => _root_.flags.p.package.C#
_root_.flags.p.package.C#(y) => _root_.flags.p.package.C#
_root_.flags.p.package.C#(z) => _root_.flags.p.package.C#
_root_.flags.p.package.C#[T] => _root_.flags.p.package.C#
_root_.flags.p.package.C#[U] => _root_.flags.p.package.C#
_root_.flags.p.package.C#[V] => _root_.flags.p.package.C#
_root_.flags.p.package.C#`<init>`(0). => _root_.flags.p.package.C#
_root_.flags.p.package.C#`<init>`(3). => _root_.flags.p.package.C#
_root_.flags.p.package.C#`<init>`(3).(x) => _root_.flags.p.package.C#`<init>`(3).
_root_.flags.p.package.C#`<init>`(3).(y) => _root_.flags.p.package.C#`<init>`(3).
_root_.flags.p.package.C#`<init>`(3).(z) => _root_.flags.p.package.C#`<init>`(3).
_root_.flags.p.package.C#w(0). => _root_.flags.p.package.C#
_root_.flags.p.package.S# => _root_.flags.p.package.
_root_.flags.p.package.S#[T] => _root_.flags.p.package.S#
_root_.flags.p.package.S#`<init>`(0). => _root_.flags.p.package.S#
_root_.flags.p.package.T# => _root_.flags.p.package.
_root_.flags.p.package.U# => _root_.flags.p.package.
_root_.flags.p.package.V# => _root_.flags.p.package.
_root_.flags.p.package.X. => _root_.flags.p.package.
_root_.flags.p.package.Y# => _root_.flags.p.package.
_root_.flags.p.package.Y#`<init>`(0). => _root_.flags.p.package.Y#
_root_.flags.p.package.Z# => _root_.flags.p.package.
_root_.flags.p.package.m(0). => _root_.flags.p.package.
_root_.flags.p.package.m(0).[TT] => _root_.flags.p.package.m(0).
_root_.flags.p.package.x. => _root_.flags.p.package.
_root_.flags.p.package.y. => _root_.flags.p.package.
_root_.flags.p.package.z(1). => _root_.flags.p.package.
_root_.flags.p.package.z(1).(pp) => _root_.flags.p.package.z(1).
_root_.types.B# => _root_.types.
_root_.types.B#`<init>`(0). => _root_.types.B#
_root_.types.C# => _root_.types.
_root_.types.C#`<init>`(0). => _root_.types.C#
_root_.types.P# => _root_.types.
_root_.types.P#C# => _root_.types.P#
_root_.types.P#C#`<init>`(0). => _root_.types.P#C#
_root_.types.P#X# => _root_.types.P#
_root_.types.P#X#`<init>`(0). => _root_.types.P#X#
_root_.types.P#`<init>`(0). => _root_.types.P#
_root_.types.P#x. => _root_.types.P#
_root_.types.T# => _root_.types.
_root_.types.T#C# => _root_.types.T#
_root_.types.T#C#`<init>`(0). => _root_.types.T#C#
_root_.types.T#X# => _root_.types.T#
_root_.types.T#X#`<init>`(0). => _root_.types.T#X#
_root_.types.T#`<init>`(0). => _root_.types.T#
_root_.types.T#x. => _root_.types.T#
_root_.types.Test. => _root_.types.
_root_.types.Test.C# => _root_.types.Test.
_root_.types.Test.C#ByNameType. => _root_.types.Test.C#
_root_.types.Test.C#ByNameType.m1(1). => _root_.types.Test.C#ByNameType.
_root_.types.Test.C#ByNameType.m1(1).(x) => _root_.types.Test.C#ByNameType.m1(1).
_root_.types.Test.C#ClassInfoType1. => _root_.types.Test.C#
_root_.types.Test.C#ClassInfoType2# => _root_.types.Test.C#
_root_.types.Test.C#ClassInfoType2#`<init>`(0). => _root_.types.Test.C#ClassInfoType2#
_root_.types.Test.C#ClassInfoType2#x(0). => _root_.types.Test.C#ClassInfoType2#
_root_.types.Test.C#ClassInfoType3# => _root_.types.Test.C#
_root_.types.Test.C#ClassInfoType3#[T] => _root_.types.Test.C#ClassInfoType3#
_root_.types.Test.C#MethodType. => _root_.types.Test.C#
_root_.types.Test.C#MethodType.m3(0). => _root_.types.Test.C#MethodType.
_root_.types.Test.C#MethodType.m4(0). => _root_.types.Test.C#MethodType.
_root_.types.Test.C#MethodType.m5(1). => _root_.types.Test.C#MethodType.
_root_.types.Test.C#MethodType.m5(1).(x) => _root_.types.Test.C#MethodType.m5(1).
_root_.types.Test.C#MethodType.m6(1). => _root_.types.Test.C#MethodType.
_root_.types.Test.C#MethodType.m6(1).(x) => _root_.types.Test.C#MethodType.m6(1).
_root_.types.Test.C#MethodType.m6(1).[T] => _root_.types.Test.C#MethodType.m6(1).
_root_.types.Test.C#MethodType.x1(0). => _root_.types.Test.C#MethodType.
_root_.types.Test.C#MethodType.x2(0). => _root_.types.Test.C#MethodType.
_root_.types.Test.C#RepeatedType# => _root_.types.Test.C#
_root_.types.Test.C#RepeatedType#(s) => _root_.types.Test.C#RepeatedType#
_root_.types.Test.C#RepeatedType#`<init>`(1). => _root_.types.Test.C#RepeatedType#
_root_.types.Test.C#RepeatedType#`<init>`(1).(s) => _root_.types.Test.C#RepeatedType#`<init>`(1).
_root_.types.Test.C#RepeatedType#m1(1). => _root_.types.Test.C#RepeatedType#
_root_.types.Test.C#RepeatedType#m1(1).(x) => _root_.types.Test.C#RepeatedType#m1(1).
_root_.types.Test.C#RepeatedType.apply(1).(s) => _root_.types.Test.C#RepeatedType.apply(1).
_root_.types.Test.C#TypeType. => _root_.types.Test.C#
_root_.types.Test.C#TypeType.T1# => _root_.types.Test.C#TypeType.
_root_.types.Test.C#TypeType.T4# => _root_.types.Test.C#TypeType.
_root_.types.Test.C#TypeType.T5# => _root_.types.Test.C#TypeType.
_root_.types.Test.C#TypeType.T5#[U] => _root_.types.Test.C#TypeType.T5#
_root_.types.Test.C#TypeType.m2(0). => _root_.types.Test.C#TypeType.
_root_.types.Test.C#TypeType.m2(0).[T2] => _root_.types.Test.C#TypeType.m2(0).
_root_.types.Test.C#TypeType.m3(0). => _root_.types.Test.C#TypeType.
_root_.types.Test.C#TypeType.m3(0).[M3] => _root_.types.Test.C#TypeType.m3(0).
_root_.types.Test.C#TypeType.m3(0).[M3][_] => _root_.types.Test.C#TypeType.m3(0).[M3]
_root_.types.Test.C#`<init>`(0). => _root_.types.Test.C#
_root_.types.Test.C#`<refinement>`# => _root_.types.Test.C#
_root_.types.Test.C#`<refinement>`#k(0). => _root_.types.Test.C#`<refinement>`#
_root_.types.Test.C#`existentialType1 `(0).T# => _root_.types.Test.C#`existentialType1 `(0).
_root_.types.Test.C#annType1. => _root_.types.Test.C#
_root_.types.Test.C#annType2. => _root_.types.Test.C#
_root_.types.Test.C#compoundType1. => _root_.types.Test.C#
_root_.types.Test.C#compoundType2. => _root_.types.Test.C#
_root_.types.Test.C#compoundType3. => _root_.types.Test.C#
_root_.types.Test.C#existentialType1. => _root_.types.Test.C#
_root_.types.Test.C#p. => _root_.types.Test.C#
_root_.types.Test.C#singleType1. => _root_.types.Test.C#
_root_.types.Test.C#singleType2. => _root_.types.Test.C#
_root_.types.Test.C#superType1. => _root_.types.Test.C#
_root_.types.Test.C#superType2. => _root_.types.Test.C#
_root_.types.Test.C#superType3. => _root_.types.Test.C#
_root_.types.Test.C#thisType1. => _root_.types.Test.C#
_root_.types.Test.C#thisType2. => _root_.types.Test.C#
_root_.types.Test.C#typeLambda1(0). => _root_.types.Test.C#
_root_.types.Test.C#typeLambda1(0).[M] => _root_.types.Test.C#typeLambda1(0).
_root_.types.Test.C#typeLambda1(0).[M][_] => _root_.types.Test.C#typeLambda1(0).[M]
_root_.types.Test.C#typeRef1. => _root_.types.Test.C#
_root_.types.Test.C#typeRef2. => _root_.types.Test.C#
_root_.types.Test.C#typeRef3. => _root_.types.Test.C#
_root_.types.Test.C#typeRef4. => _root_.types.Test.C#
_root_.types.Test.C#x. => _root_.types.Test.C#
_root_.types.Test.Literal. => _root_.types.Test.
_root_.types.Test.Literal.bool. => _root_.types.Test.Literal.
_root_.types.Test.Literal.char. => _root_.types.Test.Literal.
_root_.types.Test.Literal.clazzOf. => _root_.types.Test.Literal.
_root_.types.Test.Literal.double. => _root_.types.Test.Literal.
_root_.types.Test.Literal.float. => _root_.types.Test.Literal.
_root_.types.Test.Literal.int. => _root_.types.Test.Literal.
_root_.types.Test.Literal.javaEnum. => _root_.types.Test.Literal.
_root_.types.Test.Literal.long. => _root_.types.Test.Literal.
_root_.types.Test.Literal.nil. => _root_.types.Test.Literal.
_root_.types.Test.Literal.string. => _root_.types.Test.Literal.
_root_.types.Test.Literal.unit. => _root_.types.Test.Literal.
_root_.types.Test.M# => _root_.types.Test.
_root_.types.Test.M#`<init>`(0). => _root_.types.Test.M#
_root_.types.Test.M#m(0). => _root_.types.Test.M#
_root_.types.Test.N# => _root_.types.Test.
_root_.types.Test.N#`<init>`(0). => _root_.types.Test.N#
_root_.types.Test.N#n(0). => _root_.types.Test.N#
_root_.types.ann# => _root_.types.
_root_.types.ann#(x) => _root_.types.ann#
_root_.types.ann#[T] => _root_.types.ann#
_root_.types.ann#`<init>`(1). => _root_.types.ann#
_root_.types.ann#`<init>`(1).(x) => _root_.types.ann#`<init>`(1).
_root_.types.ann1# => _root_.types.
_root_.types.ann1#`<init>`(0). => _root_.types.ann1#
_root_.types.ann2# => _root_.types.
_root_.types.ann2#`<init>`(0). => _root_.types.ann2#